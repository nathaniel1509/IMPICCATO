/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package progimpiccato;

import java.awt.Color;
import java.awt.Graphics;
import javax.swing.JOptionPane;

/**
 *
 * @author aledm
 */
public class InterfacciaImpiccato extends javax.swing.JFrame {

    /**
     * Creates new form InterfacciaImpiccato
     */
    public InterfacciaImpiccato() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pannelloVerde = new javax.swing.JPanel();
        risposta = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        genera = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        parola = new javax.swing.JTextField();
        pannelloBianco = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        verifica = new javax.swing.JButton();
        verifica1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pannelloVerde.setBackground(new java.awt.Color(204, 204, 255));

        risposta.setBackground(new java.awt.Color(255, 255, 255));
        risposta.setFont(new java.awt.Font("Verdana Pro", 0, 14)); // NOI18N
        risposta.setForeground(new java.awt.Color(0, 0, 0));

        genera.setBackground(new java.awt.Color(255, 255, 255));
        genera.setFont(new java.awt.Font("Verdana Pro", 1, 14)); // NOI18N
        genera.setForeground(new java.awt.Color(0, 0, 0));
        genera.setText("GENERA LA PAROLA");
        genera.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        genera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generaActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Verdana Pro", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Prova ad indovinare la parola");

        parola.setEditable(false);
        parola.setBackground(new java.awt.Color(255, 255, 255));
        parola.setFont(new java.awt.Font("Verdana Pro", 0, 14)); // NOI18N
        parola.setForeground(new java.awt.Color(0, 0, 0));
        parola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parolaActionPerformed(evt);
            }
        });

        pannelloBianco.setBackground(new java.awt.Color(153, 255, 255));
        pannelloBianco.setForeground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(51, 204, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pannelloBiancoLayout = new javax.swing.GroupLayout(pannelloBianco);
        pannelloBianco.setLayout(pannelloBiancoLayout);
        pannelloBiancoLayout.setHorizontalGroup(
            pannelloBiancoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pannelloBiancoLayout.setVerticalGroup(
            pannelloBiancoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pannelloBiancoLayout.createSequentialGroup()
                .addGap(0, 376, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        verifica.setBackground(new java.awt.Color(255, 255, 255));
        verifica.setFont(new java.awt.Font("Verdana Pro", 1, 14)); // NOI18N
        verifica.setForeground(new java.awt.Color(0, 0, 0));
        verifica.setText("VERIFICA");
        verifica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        verifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verificaActionPerformed(evt);
            }
        });

        verifica1.setBackground(new java.awt.Color(255, 255, 255));
        verifica1.setFont(new java.awt.Font("Verdana Pro", 1, 14)); // NOI18N
        verifica1.setForeground(new java.awt.Color(0, 0, 0));
        verifica1.setText("RESETTA");
        verifica1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        verifica1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifica1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pannelloVerdeLayout = new javax.swing.GroupLayout(pannelloVerde);
        pannelloVerde.setLayout(pannelloVerdeLayout);
        pannelloVerdeLayout.setHorizontalGroup(
            pannelloVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pannelloVerdeLayout.createSequentialGroup()
                .addGroup(pannelloVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pannelloVerdeLayout.createSequentialGroup()
                        .addGroup(pannelloVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pannelloVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pannelloVerdeLayout.createSequentialGroup()
                                    .addGap(474, 474, 474)
                                    .addComponent(jLabel1))
                                .addGroup(pannelloVerdeLayout.createSequentialGroup()
                                    .addGap(109, 109, 109)
                                    .addComponent(jLabel2))
                                .addComponent(risposta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pannelloVerdeLayout.createSequentialGroup()
                                    .addGap(163, 163, 163)
                                    .addComponent(verifica, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pannelloVerdeLayout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addComponent(genera)))
                        .addGap(0, 103, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pannelloVerdeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(verifica1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pannelloBianco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(pannelloVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pannelloVerdeLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(parola, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(417, Short.MAX_VALUE)))
        );
        pannelloVerdeLayout.setVerticalGroup(
            pannelloVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannelloVerdeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pannelloVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pannelloVerdeLayout.createSequentialGroup()
                        .addGroup(pannelloVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pannelloVerdeLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(genera, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(verifica1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1)
                        .addGap(111, 111, 111)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(risposta, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(verifica, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pannelloBianco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(pannelloVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pannelloVerdeLayout.createSequentialGroup()
                    .addGap(101, 101, 101)
                    .addComponent(parola, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(277, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pannelloVerde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pannelloVerde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void parolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parolaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_parolaActionPerformed
    String indovinare="";
    String parolaCensurata = "";
    private void generaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generaActionPerformed
        String tempString = "";
        Graphics disegno = pannelloBianco.getGraphics();
        
        disegno.setColor(new Color (153,255,255));
        disegno.fillRect(0, 0, 300, 376);
        disegno.setColor(new Color (51,204,0));
        disegno.fillRect(0, 376, 300, 24);
        
        disegno.setColor(Color.BLACK);
        disegno.drawLine(50, 380, 200, 380);  //base
        disegno.drawLine(100, 380, 100, 50);  //trave verticale
        disegno.drawLine(100, 50, 220, 50);   //trave orizzontale
        disegno.drawLine(200, 50, 100, 100);  //aggancio tra le travi
        disegno.drawLine(220, 50, 220, 90);   //corda
        
        
        errori = 0;
        
        int Nparola = (int)(Math.random() * 5 + 1);
        
        parolaCensurata="";
        
        switch(Nparola){
            case 1:
                indovinare="pollo";
                
            break;
            
            case 2:
                indovinare="tazza";
            break;
            
            case 3:
                indovinare="idromassaggio";
            break;
            
            case 4:
                indovinare="microfono";
            break;
            
            case 5:
                indovinare="mela"; // _ _ _ _ 
            break;
            
        }
        
        System.out.println(indovinare);
        for(int i=0; i<indovinare.length(); i++){
            parolaCensurata += "_ ";
        }
        
        System.out.println(parolaCensurata.length());
        char[] lettere = {indovinare.charAt(0), indovinare.charAt(indovinare.length()-1)};
        for(int i=0; i<2; i++) {
            tempString = "";
            for(int j=0; j<parolaCensurata.length(); j++) {
                if(indovinare.charAt(j/2) == lettere[i] && j%2==0) {
                    tempString += lettere[i] + " ";
                }else if (parolaCensurata.charAt(j) != ' ') {
                    tempString += parolaCensurata.charAt(j) + " ";
                }
            }
            parolaCensurata = tempString;
        }
        parola.setText(parolaCensurata);
    }//GEN-LAST:event_generaActionPerformed
    int errori=0;
    private void verificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verificaActionPerformed
        String tempString = "";
        Graphics omino = pannelloBianco.getGraphics();
        String rispostaU = risposta.getText();
        
                if(rispostaU.length() > 1){ //se è una parola
                    if(rispostaU.equals(indovinare)){ //vincita
                        parola.setText(indovinare);
                        JOptionPane.showMessageDialog(this, "hai indovinato con " + errori + "errori!");
                        parola.setText("");
                        risposta.setText("");
                        omino.setColor(new Color (153,255,255));
                        omino.fillRect(0, 0, 300, 376);
                        omino.setColor(new Color (51,204,0));
                        omino.fillRect(0, 376, 300, 24);
                        errori = 0;
                    }else{//sconfitta
                        JOptionPane.showMessageDialog(this, "sbagliato. hai perso :(");
                        omino.drawOval(195, 91, 50, 50); //testa
                        omino.drawLine(220, 140, 220, 250); //corpo
                        omino.drawLine(220, 250, 200, 330); //gamba sinistra
                        omino.drawLine(220, 250, 240, 330); //gamba destra
                        omino.drawLine(220, 140, 200, 250); //braccio sinistro
                        omino.drawLine(220, 140, 240, 250); //braccio destro
                        parola.setText("");
                        risposta.setText("");
                        omino.setColor(Color.white);
                        omino.fillRect(0, 0, 300, 400);
                        errori = 0;
                    }
                    
                }else if(rispostaU.length() == 1){//se è una lettera
                    if(indovinare.contains(rispostaU)){
                        for(int j=0; j<parolaCensurata.length(); j++){//se è giusta sostituisce
                            if(indovinare.charAt(j/2) == rispostaU.charAt(0) && j%2==0) {
                                tempString += rispostaU.charAt(0) + " ";
                            }else if (parolaCensurata.charAt(j) != ' ') {
                                tempString += parolaCensurata.charAt(j) + " ";
                            }
                        }
                        parolaCensurata = tempString;
                        parola.setText(parolaCensurata);
                    
                    }else{
                        JOptionPane.showMessageDialog(this, "non c'è questa lettera nella parola :(");
                        errori++;
                        switch(errori){
                            case 1:
                                omino.drawOval(195, 91, 50, 50); //testa
                            break;
                            
                            case 2:
                                omino.drawLine(220, 140, 220, 250); //corpo
                            break;
                            
                            case 3:
                                omino.drawLine(220, 250, 200, 330); //gamba sinistra
                            break;
                            
                            case 4:
                                omino.drawLine(220, 250, 240, 330); //gamba destra
                            break;
                            
                            case 5:
                                omino.drawLine(220, 140, 200, 250); //braccio sinistro
                            break;
                            
                            case 6:
                                omino.drawLine(220, 140, 240, 250); //braccio destro
                                JOptionPane.showMessageDialog(this, "hai perso :(");
                            break;
                        }
                    }
                
                if(!parolaCensurata.contains("_")){
                    JOptionPane.showMessageDialog(this, "hai vintooo con " + errori + " errori");
                }
        }           
    }//GEN-LAST:event_verificaActionPerformed

    private void verifica1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifica1ActionPerformed
        Graphics rettangolo = pannelloBianco.getGraphics();
        parola.setText("");
        risposta.setText("");
        rettangolo.setColor(new Color (153,255,255));
        rettangolo.fillRect(0, 0, 300, 376);
        rettangolo.setColor(new Color (51,204,0));
        rettangolo.fillRect(0, 376, 300, 24);
        errori = 0;
    }//GEN-LAST:event_verifica1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfacciaImpiccato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfacciaImpiccato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfacciaImpiccato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfacciaImpiccato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfacciaImpiccato().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton genera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pannelloBianco;
    private javax.swing.JPanel pannelloVerde;
    private javax.swing.JTextField parola;
    private javax.swing.JTextField risposta;
    private javax.swing.JButton verifica;
    private javax.swing.JButton verifica1;
    // End of variables declaration//GEN-END:variables
}
